'''
Задача 35.
Напишите функцию, которая принимает одно число и проверяет,является ли оно простым.
Напоминание: простое число - это число, которое имеет 2 делителя: 1 и n (само число) 
                        Input: 5 Output: yes
РЕШЕНИЕ:
1-Вводим натуральное число А и записываем его в отдельную переменную.
2-Инициализируем переменную, которая будет выполнять роль счетчика (значением 0).
3-Организуем цикл for в диапазоне от 2 до значения проверяемого числа А, деленного на 2 (целочисленное деление).
4-Находим количество делителей нашего числа. (при помощи условного оператора if мы проверяем, делится ли число без остатка,
  и затем, если делится, увеличиваем наш счетчик на единицу)
5-Если число делителей равно 0, то проверяемое число является простым.
6-Выводим результат на экран.
'''
import time

print('Задача 35')
print('Определить является ли число А простым:')
## Проверка введенного числа:
try:
    a = int(input('  Введите натуральное число А: '))
except ValueError:
    print("  Вы ввели не число!")
    a = int(input('  Введите число А: '))

start = time.perf_counter()
k = 0 # 
for i in range(2, a // 2+1):
    if (a % i == 0):
        k = k+1
if (k <= 0):
    print(f' Число: {a} - простое')
else:
    print(f' Число: {a} - не является простым')
end = time.perf_counter()
duration = end - start
print(duration)
## Вариант1 F=21193 (True) Time1=0.001227000029757619
## Вариант2 F=21193 (True) Time2=0.00014070002362132072
## Time1=0.001227000029757619
## Time2=0.00014070002362132072
## print(Time1/Time2) ->>> 8.72


## ВАРИАНТ 2 (более быстрый)
'''
    Все простые числа существуют в форме (6n ± 1), за исключением 2 и 3. 
    Можно сделать проверку делимости данного числа на 2 и 3, а затем
    проверку каждого числа, имеющего форму (6n ± 1).
'''
def isitPrime(k):
    if k==2 or k==3: return True
    if k%2==0 or k<2: return False
    for i in range(3, int(k**0.5)+1, 2):
        if k%i==0:
            return False
    return True
# print(isitPrime(13))

start = time.perf_counter()
print(isitPrime(21193))
end = time.perf_counter()
duration = end - start
print(duration)
## F=21193 (True) Time=0.00014070002362132072
